{"version":3,"sources":["Component/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentTime","Date","toUTCString","slice","Clock","state","currentTime","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","e","preventDefault","React","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,YAAaN,KAFjB,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZL,YAAaN,MAGfY,QAAQC,KAAK,EAAKR,MAAMC,eACvB,OAdP,gCAiBE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCN,OAAOG,QAAQK,MAAf,uBAAqCH,EAAUC,UAA/C,eAA+DP,KAAKQ,MAAMD,cAnBhF,kCAuBE,WACEN,OAAOS,cAAcV,KAAKD,WAxB9B,oBA2BE,WACE,IACED,EACEE,KAAKH,MADPC,YAIAS,EACEP,KAAKQ,MADPD,UAGF,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WA7CX,GAA2Bc,aCV3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAQX,IAAMG,EAAb,4MACEpB,MAAyB,CACvBqB,UAAU,EACVX,UAAW,WAHf,EAMER,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZI,UAAWM,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBAEF,EAAKnB,SAAS,CACZe,UAAU,OAIdC,SAASC,iBAAiB,SAAS,WACjC,EAAKjB,SAAS,CACZe,UAAU,SAzBlB,oBA8BE,WACE,MAGIlB,KAAKH,MAFPqB,EADF,EACEA,SACAX,EAFF,EAEEA,UAGF,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,EACG,cAAC,EAAD,CAAOX,UAAWA,IAClB,YAzCZ,GAAyBgB,IAAMX,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.e8a92b64.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  currentTime: string,\n};\n\ntype Props = {\n  clockName: string,\n};\n\nfunction getCurrentTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: getCurrentTime(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        currentTime: getCurrentTime(),\n      });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const {\n      currentTime,\n    } = this.state;\n\n    const {\n      clockName,\n    } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport React from 'react';\nimport { Clock } from './Component/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n  }\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n          ? <Clock clockName={clockName} />\n          : null}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}